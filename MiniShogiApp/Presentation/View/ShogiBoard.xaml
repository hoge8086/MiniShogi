<UserControl x:Class="MiniShogiApp.Presentation.View.ShogiBoard"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:MiniShogiApp.Presentation.View"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <ItemsControl x:Name="board" ItemsSource="{Binding Board}" Margin="5">
        <ItemsControl.Template>
            <!--ボードの枠-->
            <ControlTemplate>
                <Border BorderThickness="8" BorderBrush="Cornsilk">
                    <!--ボード-->
                    <ItemsPresenter/>
                </Border>
            </ControlTemplate>
        </ItemsControl.Template>
        <ItemsControl.ItemsPanel>
            <!--行-->
            <ItemsPanelTemplate>
                <StackPanel Orientation="Vertical"/>
            </ItemsPanelTemplate>
        </ItemsControl.ItemsPanel>
        <ItemsControl.ItemTemplate>
            <DataTemplate>
                <!--1行の中の列-->
                <ItemsControl ItemsSource="{Binding}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal">
                            </StackPanel>
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <!--セルの定義(ボタン)-->
                            <Button x:Name="button" Height="50" Width="50" BorderThickness=".3" Background="Cornsilk"
                                    Command="{Binding Path=DataContext.MoveCommand, ElementName=board}"
                                    local:ButtonHelper.CommandParameter="{Binding .}">
                                <Grid>
                                    <!--置いてあるとき-->
                                    <TextBlock x:Name="koma" FontSize="32" TextAlignment="Center" Text="{Binding KomaName}" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Visible"/>
                                    <!--置けるとき-->
                                    <Ellipse x:Name="ellipse"  Height="10" Width="10" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Hidden"
                                            StrokeDashArray="2,2" Fill="Pink"
                                            StrokeThickness="3">
                                    </Ellipse>
                                </Grid>
                            </Button>
                            <!--データトリガーを使用し、セルの状態で見せ方を変える-->
                            <DataTemplate.Triggers>
                                <!--【空のセル】-->
                                <DataTrigger Binding="{Binding Koma}" Value="{x:Null}">
                                    <Setter TargetName="ellipse" Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                                <!--【成りの駒】-->
                                <DataTrigger Binding="{Binding IsTransformed}" Value="True">
                                    <Setter TargetName="koma" Property="Foreground" Value="Red"/>
                                </DataTrigger>
                                <!--【後手の駒】-->
                                <DataTrigger Binding="{Binding Player}" Value="SecondPlayer">
                                    <Setter TargetName="koma" Property="RenderTransformOrigin" Value="0.5,0.5"/>
                                    <Setter TargetName="koma" Property="RenderTransform">
                                        <Setter.Value>
                                            <ScaleTransform ScaleY="-1" />
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <!--【空で移動先として指定可能なセル】
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Koma}" Value="{x:Null}"/>
                                        <Condition Binding="{Binding ElementName=button, Path=IsMouseOver}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    点線を表示する
                                    <Setter TargetName="ellipse" Property="Visibility" Value="Visible"/>
                                </MultiDataTrigger>
                                -->
                                <!--【石が置いてあるセル】
                                <DataTrigger Binding="{Binding CellType}" Value="PutStone">
                                    石を表示して所有するプレイヤーの色で塗る
                                    <Setter TargetName="stone" Property="Color" Value="{Binding StoneType, Converter={StaticResource playerToColor}}"/>
                                    <Setter TargetName="stone" Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                -->
                            </DataTemplate.Triggers>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </DataTemplate>
        </ItemsControl.ItemTemplate>
    </ItemsControl>
</UserControl>
