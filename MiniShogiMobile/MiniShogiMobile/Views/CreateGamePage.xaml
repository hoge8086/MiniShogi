<?xml version="1.0" encoding="utf-8" ?>
<ctrl:BasePage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:prism="http://prismlibrary.com"
             xmlns:ctrl="clr-namespace:MiniShogiMobile.Controls"
             xmlns:views="clr-namespace:MiniShogiMobile.Views"
             xmlns:styles="clr-namespace:MiniShogiMobile.Styles"
             xmlns:vm="clr-namespace:MiniShogiMobile.ViewModels"
             xmlns:utils="clr-namespace:MiniShogiMobile.Utils"
             xmlns:player="clr-namespace:Shogi.Business.Domain.Model.PlayerTypes;assembly=Shogi.Business"
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
             prism:ViewModelLocator.AutowireViewModel="True"
             x:Class="MiniShogiMobile.Views.CreateGamePage"
             x:Name="page"
             Title="ゲーム作成">
    <!--ContentPage.ControlTemplateを使用するとToolbarItemのBindingが機能しない-->
    <!--https://github.com/PrismLibrary/Prism/issues/1399-->
    <ctrl:BasePage.ToolbarItems>
        <!--
        <ToolbarItem Text="設定"
                     Order="Secondary"
                     Priority="0" />
        -->
        <ToolbarItem Text="完了"
                     Command="{Binding BindingContext.SaveCommand, Source={x:Reference page}}"
                     Order="Primary"
                     Priority="0" />
    </ctrl:BasePage.ToolbarItems>
    <Grid RowDefinitions="Auto,*,Auto" ColumnDefinitions="10,*,10">
        <!--メニュー-->
        <StackLayout Grid.Column="1"
                     Margin="0,5,0,0"
                     Grid.Row="0">
            <ctrl:EntryWithLabel HeightRequest="35"
                                 HorizontalOptions="FillAndExpand"
                                 LabelText="タイトル"
                                 Placeholder="必須項目"
                                 EntryText="{Binding GameTitle.Value}"/>
        </StackLayout>
        <!--ゲーム-->
        <StackLayout
            x:Name="gameField"
            Spacing="0"
            Margin="0"
            Grid.Column="1"
            Grid.Row="1">
            <!--プレイヤー2-->
            <Grid ColumnDefinitions="*,Auto"
                HeightRequest="{Binding Source={x:Reference gameField}, Path=Height, Converter={StaticResource MathExpressionConverter}, ConverterParameter='floor(x * 0.1)'}"
                VerticalOptions="EndAndExpand"
                BindingContext="{Binding Game.HandsOfPlayer2}">
                <!--プレイヤーアイコン-->
                <ctrl:PlayerView
                    Grid.Column="1"
                    Text="P2"
                    WidthRequest="{Binding Source={RelativeSource Self}, Path=Height}">
                    <!--
                    BackgroundColor="{StaticResource Player2Color}">
                     -->
                </ctrl:PlayerView>
                <!--駒台-->
                <!--TODO:一部HandsOfCreateGameViewの中からCreateGamePageを直接参照しているのが気に入らない-->
                <views:HandsOfCreateGameView Grid.Column="0"
                                             Rotation="180"
                                             TapKomaCommand="{Binding Path=BindingContext.TapHandKomaCommand, Source={x:Reference board}}"
                                             IsHighlight="{Binding Path=BindingContext.CanMoveToPlayer2Komadai.Value, Source={x:Reference board}}"
                                             TapKomadaiHighlightCommand="{Binding Path=BindingContext.TapKomadaiCommand, Source={x:Reference board}}"
                                             AddKomaCommand="{Binding Path=BindingContext.AddHandKomaCommand, Source={x:Reference board}}"
                                             PlayerType="{Binding Source={x:Static player:PlayerType.Player2}}"/>
            </Grid>
            <!--盤-->
            <ctrl:SquareCell2DGridControl
                Margin="0,12,0,12"
                x:Name="board"
                VerticalOptions="Center"
                MaxHeight="{Binding Source={x:Reference gameField}, Path=Height, Converter={StaticResource MathExpressionConverter}, ConverterParameter='floor(x * 0.8) - 24'}"
                MaxWidth="{Binding Source={x:Reference gameField}, Path=Width}"
                ItemsSource="{Binding Game.Board.Cells}">
                <ctrl:SquareCell2DGridControl.ItemTemplate>
                    <ControlTemplate>
                        <RelativeLayout BindingContext="{TemplateBinding BindingContext}">
                            <!--セル-->
                            <views:CellView
                                RelativeLayout.XConstraint="0"
                                RelativeLayout.YConstraint="0"
                                RelativeLayout.WidthConstraint="{ConstraintExpression Type=RelativeToParent, Property=Width}"
                                RelativeLayout.HeightConstraint="{ConstraintExpression Type=RelativeToParent, Property=Height}"
                                xct:TouchEffect.Command="{Binding Path=BindingContext.TapCellCommand, Source={x:Reference board}}"
                                xct:TouchEffect.CommandParameter="{Binding .}">
                                <views:CellView.IsHighlight>
                                  <!--選択中のセルが自身のセルならハイライト-->
                                  <MultiBinding Converter="{StaticResource EqualsMultiConverter}">
                                      <Binding Path="BindingContext.Selected.Value" Source="{x:Reference board}"/>
                                      <Binding />
                                  </MultiBinding>
                                </views:CellView.IsHighlight>
                                <views:CellView.Triggers>
                                    <!--自身のセルが空で、選択中のセルに駒があるなら、自身のセルへ移動可能なので●を出す-->
                                    <MultiTrigger TargetType="views:CellView">
                                        <MultiTrigger.Conditions>
                                            <BindingCondition Binding="{Binding Koma.Value, Converter={x:StaticResource isNullConverter}}" Value="True"/>
                                            <BindingCondition Binding="{Binding Path=BindingContext.IsSelectingKoma.Value, Source={x:Reference board}}" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="IsMarked" Value="True"/>
                                    </MultiTrigger>
                                </views:CellView.Triggers>
                            </views:CellView>
                        </RelativeLayout>
                    </ControlTemplate>
                </ctrl:SquareCell2DGridControl.ItemTemplate>
            </ctrl:SquareCell2DGridControl>
            <!--プレイヤー1-->
            <Grid ColumnDefinitions="Auto,*,Auto,Auto"
                  HeightRequest="{Binding Source={x:Reference gameField}, Path=Height, Converter={StaticResource MathExpressionConverter}, ConverterParameter='floor(x * 0.1)'}"
                  BindingContext="{Binding Game.HandsOfPlayer1}"
                  VerticalOptions="StartAndExpand">
                <!--プレイヤーアイコン-->
                <ctrl:PlayerView Grid.Column="0"
                                 Text="P1"
                                 WidthRequest="{Binding Source={RelativeSource Self}, Path=Height}">
                                <!--
                                 BackgroundColor="{StaticResource Player1Color}">
                                 -->
                </ctrl:PlayerView>
                <!--駒台-->
                <views:HandsOfCreateGameView Grid.Column="1"
                                             TapKomaCommand="{Binding Path=BindingContext.TapHandKomaCommand, Source={x:Reference board}}"
                                             IsHighlight="{Binding Path=BindingContext.CanMoveToPlayer1Komadai.Value, Source={x:Reference board}}"
                                             TapKomadaiHighlightCommand="{Binding Path=BindingContext.TapKomadaiCommand, Source={x:Reference board}}"
                                             AddKomaCommand="{Binding Path=BindingContext.AddHandKomaCommand, Source={x:Reference board}}"
                                             PlayerType="{Binding Source={x:Static player:PlayerType.Player1}}"/>
            </Grid>
        </StackLayout>
        <Grid Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3">
            <StackLayout Spacing="0">
                <BoxView Style="{StaticResource HorizontalLine}" Background="{StaticResource AppControlDarkColor2}"/>
                <StackLayout BackgroundColor="{StaticResource AppBackgroundColor}"
                             Orientation="Horizontal"
                             HeightRequest="50"
                             HorizontalOptions="FillAndExpand"
                             Padding="0,10,0,6">
                    <StackLayout.Resources>
                        <Style TargetType="ctrl:ImageTextButton">
                            <Setter Property="TintColor" Value="{StaticResource AppControlDarkColor2}"/>
                            <Setter Property="HorizontalOptions" Value="CenterAndExpand"/>
                        </Style>
                    </StackLayout.Resources>

                    <ctrl:ImageTextButton Source="{utils:ImageResource MiniShogiMobile.Images.EditBoard.png}" 
                                 Text="盤編集"
                                 Command="{Binding EditSettingCommand}"/>
                    <ctrl:ImageTextButton Source="{utils:ImageResource MiniShogiMobile.Images.EditKoma.png}" 
                                 Text="駒編集"
                                 Command="{Binding EditCellCommand}"/>
                    <!--TODO:コピー中はコピー解除という名称にして、コピー解除できるようにする-->
                    <ctrl:ImageTextButton Source="{utils:ImageResource MiniShogiMobile.Images.CopyKoma.png}" 
                                 Command="{Binding CopyKomaCommand}"
                                 Text="コピー">
                        <ctrl:ImageTextButton.Triggers>
                            <DataTrigger TargetType="ctrl:ImageTextButton" Binding="{Binding IsCopying.Value}" Value="True">
                                <Setter Property="Text" Value="コピー解除"/>
                            </DataTrigger>
                        </ctrl:ImageTextButton.Triggers>
                    </ctrl:ImageTextButton>
                    <ctrl:ImageTextButton Source="{utils:ImageResource MiniShogiMobile.Images.DeleteKoma.png}" 
                                 Text="削除"
                                 Command="{Binding DeleteKomaCommand}"/>
                </StackLayout>
            </StackLayout>
        </Grid>
    </Grid>
</ctrl:BasePage>