<?xml version="1.0" encoding="UTF-8"?>
<ContentView xmlns="http://xamarin.com/schemas/2014/forms" 
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:ctrl="clr-namespace:MiniShogiMobile.Controls"
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
             xmlns:views="clr-namespace:MiniShogiMobile.Views"
             xmlns:utils="clr-namespace:MiniShogiMobile.Utils"
             xmlns:vm="clr-namespace:MiniShogiMobile.ViewModels"
             x:Class="MiniShogiMobile.Views.PlayerWithHandsView"
             x:Name="self">
    <ContentView.Content>
        <Grid ColumnDefinitions="Auto,*,Auto" ColumnSpacing="0">
            <Grid Grid.Column="0">
                <Grid.Triggers>
                    <DataTrigger TargetType="Grid" Binding="{Binding Path=IsRotated, Source={x:Reference self}}" Value="True">
                        <Setter Property="Grid.Column" Value="2"/>
                    </DataTrigger>
                </Grid.Triggers>
                <StackLayout VerticalOptions="FillAndExpand" Spacing="2" Margin="4,0,4,0">
                    <Grid VerticalOptions="FillAndExpand"
                          ColumnDefinitions="*,1.5*" RowDefinitions="1.5*,*" RowSpacing="0" ColumnSpacing="0"
                          WidthRequest="{Binding Source={RelativeSource Self}, Path=Height}">
                        <!--プレイヤーアイコン-->
                        <ctrl:PlayerView Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Grid.RowSpan="2" Color="Gray"
                             Source="MiniShogiMobile.Images.Character1.png"
                             xct:TouchEffect.LongPressDuration="3000"
                             xct:TouchEffect.LongPressCommand="{Binding Source={RelativeSource AncestorType={x:Type views:PlayerWithHandsView}}, Path=TapPlayerCommand}"
                             xct:TouchEffect.LongPressCommandParameter="{Binding Player.Value}">
                            <ctrl:PlayerView.Triggers>
                                <DataTrigger TargetType="ctrl:PlayerView" Binding="{Binding IsCurrentTurn.Value}" Value="True">
                                    <Setter Property="Color" Value="{Binding Path=PlayerColor, Source={x:Reference self}}"/>
                                </DataTrigger>
                                <MultiTrigger TargetType="ctrl:PlayerView">
                                    <MultiTrigger.Conditions>
                                        <BindingCondition Binding="{Binding IsCurrentTurn.Value}" Value="True"/>
                                        <BindingCondition Binding="{Binding Source={RelativeSource AncestorType={x:Type views:PlayGamePage}}, Path=BindingContext.ViewState.Value, Converter={StaticResource IsTypeOfConverter}, ConverterParameter={x:Type vm:ViewStateGameStudying}}" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Source" Value="MiniShogiMobile.Images.Character1_Thinking.png"/>
                                </MultiTrigger>
                            </ctrl:PlayerView.Triggers>
                        </ctrl:PlayerView>
                        <!--名前-->
                        <Frame Grid.Row="1" Grid.Column="1" BackgroundColor="{StaticResource AppControlDarkColor}" CornerRadius="4" Padding="0,2,0,2" Margin="-10,0,0,0" VerticalOptions="End" HorizontalOptions="FillAndExpand">
                            <Label TextColor="White"
                                       Padding="8,0,0,0"
                                       VerticalTextAlignment="Center"
                                       HorizontalTextAlignment="Start"
                                       HorizontalOptions="CenterAndExpand"
                                       VerticalOptions="CenterAndExpand"
                                       Text="{Binding Name.Value}">
                                <Label.FontSize>
                                    <OnIdiom x:TypeArguments="x:Double" Phone="11" Tablet="22"/>
                                </Label.FontSize>
                            </Label>
                        </Frame>
                        <ctrl:KomaView Grid.Row="1" Grid.Column="0"
                                       DisplayName="{Binding TurnType.Value, Converter={StaticResource EnumToDescriptionConverter}}"
                                       VerticalOptions="EndAndExpand"/>
                    </Grid>
                    <!--プログレスバー-->
                    <Grid HeightRequest="4">
                        <ProgressBar 
                                     Progress="{Binding ProgressOfComputerThinking.Value}"
                                     IsVisible="False"
                                     VerticalOptions="Center"
                                     HorizontalOptions="FillAndExpand"
                                     ProgressColor="{StaticResource AppControlDarkColor2}">
                            <ProgressBar.Triggers>
                                <!-- コンピュータの思考中のみ表示-->
                                <MultiTrigger TargetType="ProgressBar">
                                    <MultiTrigger.Conditions>
                                        <BindingCondition Binding="{Binding IsCurrentTurn.Value}" Value="True"/>
                                        <BindingCondition Binding="{Binding IsComputer.Value}" Value="True"/>
                                        <BindingCondition Binding="{Binding Source={RelativeSource AncestorType={x:Type views:PlayGamePage}}, Path=BindingContext.ViewState.Value, Converter={StaticResource IsTypeOfConverter}, ConverterParameter={x:Type vm:ViewStateWaiting}}" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="IsVisible" Value="True"/>
                                </MultiTrigger>
                            </ProgressBar.Triggers>
                        </ProgressBar>
                    </Grid>
                </StackLayout>
            </Grid>
            <!--持ち駒の台-->
            <ctrl:KomadaiView Grid.Column="1"
                              HorizontalOptions="FillAndExpand"
                              VerticalOptions="FillAndExpand"
                              Margin="0,8,0,8">
                <StackLayout Spacing="0" Orientation="Horizontal">
                    <!--持ち駒-->
                    <ScrollView Orientation="Horizontal"
                                HorizontalOptions="FillAndExpand"
                                VerticalOptions="FillAndExpand">
                        <!-- レイアウト変更がGetKomaView()へ影響あり -->
                        <FlexLayout x:Name="handsStackLayout"
                                     HorizontalOptions="FillAndExpand"
                                     VerticalOptions="FillAndExpand"
                                     Direction="Row"
                                     BindableLayout.ItemsSource="{Binding Hands}">
                            <FlexLayout.Triggers>
                                <!--TODO:DirectionにRowReverseを指定するとレイアウトが崩れるのでWidhRequestを1000にしている.対処方法は以下をウォッチ-->
                                <!--https://github.com/xamarin/Xamarin.Forms/issues/15085-->
                                <DataTrigger TargetType="FlexLayout" Binding="{Binding Path=IsRotated, Source={x:Reference self}}" Value="True">
                                    <Setter Property="Direction" Value="RowReverse"/>
                                </DataTrigger>
                            </FlexLayout.Triggers>
                            <BindableLayout.ItemTemplate>
                               <DataTemplate>
                                   <!--なぜかDataTemplate内でx:Referenceが効かないのでRelativeSourceを使う-->
                                   <!--参考:https://social.msdn.microsoft.com/Forums/en-US/bbfd3371-b913-4f0e-9ee3-c811a7282193/xreference-not-working?forum=xamarinforms-->
                                   <Grid WidthRequest="{Binding Source={RelativeSource Self}, Path=Height}"
                                         xct:TouchEffect.LongPressCommand="{Binding Source={RelativeSource AncestorType={x:Type views:PlayerWithHandsView}}, Path=KomaLongPressCommand}"
                                         xct:TouchEffect.LongPressCommandParameter="{Binding .}"
                                         xct:TouchEffect.Command="{Binding Source={RelativeSource AncestorType={x:Type views:PlayerWithHandsView}}, Path=ClickCommand}"
                                         xct:TouchEffect.CommandParameter="{Binding .}">
                                       <ctrl:HandKomaView Number="{Binding Num.Value}"
                                                          DisplayName="{Binding Name}"
                                                          IsHighlight="{Binding IsSelected.Value}"
                                                          IsRotated="{Binding Path=IsRotated, Source={RelativeSource AncestorType={x:Type views:PlayerWithHandsView}}}"/>
                                   </Grid>
                               </DataTemplate>
                            </BindableLayout.ItemTemplate>
                        </FlexLayout>
                    </ScrollView>
                </StackLayout>
            </ctrl:KomadaiView>
        </Grid>
  </ContentView.Content>
</ContentView>